
    public class Main {
        public static void main(String[] args) {
            task1();
            task2();
            task3();
        }

            public static int yearPrint () {
                //  в этом методе мы задаем года
                //  введите гребанный год
                var year2 = 2000;
                return year2;
            }
            public static int proverkaGoda () {
                // этот метод считает високосный или нет и выводит
                var year = yearPrint();
                if ((year % 400 == 0) || (year % 4 == 0 && year % 100 != 0)) {
                    System.out.println("Год " + year + " високосный");
                } else {
                    System.out.println("Год " + year + " обычный");
                }
                return year;
            }


            public static void task1 () {
                System.out.println("Задача 1");
                //Реализуйте метод, который получает в качестве параметра год, проверяет,
                // является ли он високосным, и выводит результат в консоль.
                //Эту проверку вы уже реализовывали в задании по условным операторам.
                // Теперь проверку оберните в метод и используйте год, который приходит в виде параметра.
                //
                //Результат программы выведите в консоль. Если год високосный,
                // то напечатайте сообщение: «...  год — високосный год». Если год невисокосный,
                // то: «... год — невисокосный год».


                // а в меине мы просто выводим итоговый метод на принт :)
                // или я не правильно понял саму задачу о_О, но покастил именно так,
                //  в последующих заданиях усложняем
                proverkaGoda();
            }

                public static int osName () {
                    // по этому методу, вводим тип операционной системы ( 0 и 1)
                    var clientOS = 0;
                    return clientOS;
                }
                public static int osYear () {
                    // по этому методу, вводим год системы
                    var clientDeviceYear = 2019;
                    return clientDeviceYear;
                }
                public static int iOs () {
                    // в этом методе мы считаем какая у нас версия аоса
                    if (osName() == 0 && osYear() >= 2015) {
                        System.out.println("Установите версию приложения для iOS по ссылке");
                    } else if (osName() == 0 && osYear() < 2015) {
                        System.out.println(" Установите облегченную версию приложения для iOS по ссылке");
                    }
                    return 0;
                }
                public static int android () {
                    // в это методе мы считаем какая у нас версия ведроида
                    if (osName() == 1 && osYear() >= 2015) {
                        System.out.println("Установите версию приложения для Android по ссылке");
                    } else if (osName() == 1 && osYear() < 2015) {
                        System.out.println(" Установите облегченную версию приложения для Android по ссылке");
                    }
                    return 1;
                }
                public static void task2 () {

                    System.out.println("Задача 2");
                    //Задача 2
                    //Вспомните задание 2 из урока «Условные операторы»,
                    // где вы предлагали пользователю облегченную версию приложения.
                    //Напишите метод, куда подаются два параметра: тип операционной
                    // системы (0 — iOS, 1 — Android ) и год выпуска устройства.
                    // Если устройство старше текущего года, предложите ему установить облегченную версию.
                    //  Текущий год можно получить таким способом:
                    //  int currentYear = LocalDate.now().getYear();
                    // Или самим задать значение вручную — ввести в переменную числовое значение.
                    //  В результате программа должна выводить в консоль сообщение,
                    //  какую версию приложения (обычную или облегченную) и для
                    //  какой ОС (Android или iOS) установить пользователю.

                    // соединяем вышестоящие методы и получаем примитивные методы

                    osYear();
                    osName();
                    iOs();
                    android();
                }
                // задание 3
                public static int writeDistance () {
                    // в этом методе указываем дистанцию в км доставки
                    var deliveryDistance = 95;
                    return deliveryDistance;
                }

                public static int writeDays () {
                    // в этом методе указываем количество дней на 20 км (дефолт 1 день на 20 км)
                    int delivery = 1;
                    if (writeDistance() > 20) {
                        delivery++;
                    }
                    if (writeDistance() > 60) {
                        delivery++;
                    }
                    return delivery;
                }
                public static void noDostavka () {
                    // в этом методе у нас нет доставки
                    System.out.println("Доставки нет");
                }
                public static void yesDostavka () {
                    // в этом методе мы конектим доставку в км и дни
                    System.out.println(" чтоб доставить клиенту карту, на " + writeDistance() + " км, потребуется " + writeDays() + "  дней");
                }
                public static void task3 (){

                System.out.println("Задача 3");
                // Возвращаемся к задаче на расчет дней доставки банковской карты.
                // Ваша задача — доработать код, а именно написать метод,
                // который на вход принимает дистанцию и возвращает итоговое количество дней доставки.
                //    В банке для клиентов организовывается доставка карт на дом.
                //   Чтобы известить клиента о том, когда будет доставлена его карта,
                //  нужно знать расстояние от офиса до адреса доставки.
                //  Правила доставки такие:
                //  Доставка в пределах 20 км занимает сутки.
                //  Доставка в пределах от 20 км до 60 км добавляет еще один день доставки.
                //  Доставка в пределах от 60 км до 100 км добавляет еще одни сутки.
                //  Свыше 100 км доставки нет.
                //  То есть с каждым следующим интервалом доставки срок увеличивается на 1 день.
                //  Напишите программу, которая выдает сообщение в
                //  консоль: "Потребуется дней: " + срок доставки.
                //  Объявите целочисленную переменную deliveryDistance = 95,
                //  которая содержит дистанцию до клиента.

                // сам код тут
                writeDays();
                if (writeDistance() > 100) {
                    noDostavka();
                } else
                    yesDostavka();
            }


        }
